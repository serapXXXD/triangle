version: "3.7"

services:

  frontend:
    build:
      context: frontend/frontend
      dockerfile: prod.Dockerfile
    volumes:
      - ./frontend_build/:/code/result_build/


  database:
    image: huecker.io/library/postgres:16.3-alpine
    restart: always
    volumes:
      - postgres_volume:/var/lib/postgresql/data

    env_file:
      - ./.env
    ports:
      - "5432:5432"
  #  frontend:

  backend:
    build: ./backend/triangle # путь до докерфайла
    restart: always
    volumes:
      - static_volume:/code/static
      - media_volume:/code/media
    depends_on:
      - database
    env_file:
      - ./.env
    ports:
      - "8000:8000"

  nginx:
    image: huecker.io/library/nginx:1.19.3-alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/var/html/static/
      - media_volume:/var/html/media/
      - ./frontend_build/build:/var/html/frontend/
    depends_on:
      - backend
      - frontend

  rabbitmq:
    image: huecker.io/library/rabbitmq:3-management
    container_name: rabbitmq
    hostname: 'rabbitmq'
    ports:
      - "5672:5672"
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/mnesia/
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    restart: always


  redis:
    image: huecker.io/library/redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis:/data

volumes:
  postgres_volume:
  static_volume:
  media_volume:
  redis:
    driver: local
